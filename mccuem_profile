# if not interactive return
[[ $- == *i* ]] || return
# MAKE SURE THIS RUNS REGARDLESS!
umask 027

[[ -z $PS1 ]] || PS1="\u@\h [\w] % "
 
# return if this script has already run.
[[ -z $LAB_PROFILE ]] || return

SHARED_DIR="/home/mccuem/shared"
SHARED_BASE="$SHARED_DIR/.local"
CONDA_BASE="$SHARED_BASE/conda"
EMAIL_LIST_PATH="$SHARED_BASE/emails.txt"

# McCuelab Shared directives
export PATH=$CONDA_BASE/bin:$PATH
export PATH=$SHARED_BASE/bin:$PATH
export LD_LIBRARY_PATH=/home/mccuem/shared/.local/lib:$LD_LIBRARY_PATH
export FREEZEBUCKET="mccue-lab"


alias usage="du -sch .[!.]* * | sort -h"

function reload-mccuem {
    export LAB_PROFILE=''
    source ~/.bashrc
}

function fix-permissions {
    echo "Fixing permissions...."
    find /home/mccuem/ ! -readable -prune -o -user $(whoami) -type f -exec chmod g+r {} \; -o -user $(whoami) -type d -exec chmod g+rx {} \;
    echo ".ssh folder cannot be group readable"
    chmod -R g-rw ~/.ssh
    echo "DONE!"
}

function transfer-file-ownership {
    echo "Fixing permissions...."
    find /home/mccuem/ ! -readable -prune -o -user $(whoami) -type f -exec chmod g+rw {} \; -o -user $(whoami) -type d -exec chmod g+rwx {} \;
    echo ".ssh folder cannot be group readable"
    chmod -R g-rw ~/.ssh
    echo "DONE!"
}

function get-email-of() {
    if [[ $(grep $USER ${SHARED_BASE}/emails.txt | wc -l) == 0 ]]
    then
        add-my-email;
    fi
    WHICH_USER=$USER
    if [[ $# == 1 ]]
    then
        WHICH_USER=$1
    fi
    USER_LINE=$(grep ^$WHICH_USER $EMAIL_LIST_PATH)
    cut -d ' ' -f 2 <<< "$USER_LINE"
}

function add-my-email() {
    USER_EMAIL="$(get-email-of $USER)"

    if [[ -z $USER_EMAIL ]]
    then
        echo -n "Please supply your email address: "
        read USER_EMAIL
        echo "$USER $USER_EMAIL" >> "$EMAIL_LIST_PATH"
    else
        echo "Your email is already recorded."
    fi
}

function connect-to-cs() {
    if [[ $(hostname) != ln* ]];
    then
        echo "log into a mesabi node (mesabi.msi.um.edu) to use this freeze "
        return 1
    fi
    mkdir -p /tmp/$USER/csbio
    sshfs $CSUSER@crick.cs.umn.edu:/project/mccuelab /tmp/$USER/csbio
}

function unfreeze(){
    EMAIL=$(get-email-of)
    if [[ -z "$EMAIL" ]];
    then
        echo "could not find appropriate email for user"
    fi

    if [[ $(hostname) != lab* ]];
    then
        echo "log into lab.msi.umn.edu to use the freeze command"
        return 1
    fi

    if [[ $# -ne 1 ]]
    then
        echo "Syntax Error!"
        echo "------------------------------------------------------------"
        echo "Usage:"
        echo "% unfreeze DIRECTORY_NAME"
        echo ""
        echo "This command will submit a PBS job to the lab queue."
        echo "The job will unarchive, uncompress the contents of"
        echo "DIRECTORY_NAME from secondary storage. The standard output and"
        echo "error files will be generated and you will recieve emails"
        echo "from the PBS system as normal."
        echo ""
        echo "**NOTE:** use the freeze-list command to see what archives you have"
        echo "available"

        return 1
    fi
    DIR=$1

    if [[ ! -z "$EMAIL" ]]
    then
        qsub -F "$DIR" -M "$EMAIL" "$(which unfreeze.sh)" && echo "Job submitted."
    else
        echo "No email for user $USER. Try running 'add-my-email'"
    fi
}

function freeze() {
    EMAIL=$(get-email-of)
    if [[ -z "$EMAIL" ]];
    then
        echo "could not find appropriate email for user"
    fi

    if [[ $(hostname) != lab* ]];
    then
        echo "log into lab.msi.umn.edu to use the freeze command"
        return 1
    fi

    if [[ $# -ne 1 ]]
    then
        echo "Syntax Error!"
        echo "------------------------------------------------------------"
        echo "Usage:"
        echo "% freeze DIRECTORY_NAME"
        echo ""
        echo "This command will submit a PBS job to the lab queue."
        echo "The job will archive, compress and upload the contents of"
        echo "DIRECTORY_NAME to secondary storage. The standard output and"
        echo "error files will be generated and you will recieve emails"
        echo "from the PBS system as normal."

        return 1
    fi
    DIR=$(readlink -f $1)

    if [[ ! -z "$EMAIL" ]]
    then
        qsub -F "$DIR" -M "$EMAIL" "$(which freeze.sh)" && echo "Job submitted."
    else
        echo "No email for user $USER. Try running 'add-my-email'"
    fi
}


function freeze-list {
    /home/mccuem/shared/.local/conda/envs/s3cmd/bin/python \
    /home/mccuem/shared/.local/conda/envs/s3cmd/bin/s3cmd \
    --config /home/mccuem/shared/.local/.s3cfg \
    ls s3://$FREEZEBUCKET/$USER/
}

function update-lab-profile() {
    pushd $SHARED_DIR/MSI-Setup 1> /dev/null

    git pull

    popd 1> /dev/null
}

cat << EOF >&2

-------------------------------------------------
------- Currently using McCue Lab Profile -------
-------------------------------------------------
        For complete documentation, visit:
     http://github.com/UMNPonyClub/MSI-Setup
EOF

export LAB_PROFILE=mccuem

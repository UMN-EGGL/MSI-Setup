# if not interactive return
[[ $- == *i* ]] || return
# MAKE SURE THIS RUNS REGARDLESS!
umask 027


# return if this script has already run.
[[ -z $LAB_PROFILE ]] || return

CONDA_BASE="/home/mccuem/shared/.local/conda"
SHARED_BASE='/home/mccuem/shared/.local'
EMAIL_LIST_PATH="$SHARED_BASE/emails.txt"

# McCuelab Shared directives
export PATH=$CONDA_BASE/bin:$PATH
export PATH=$SHARED_BASE/bin:$PATH
export LD_LIBRARY_PATH=/home/mccuem/shared/.local/lib:$LD_LIBRARY_PATH


alias usage="du -sch .[!.]* * | sort -h"

function fix-permissions {
    echo "Fixing permissions...."
    find /home/mccuem/ ! -readable -prune -o -user $(whoami) -type f -exec chmod g+r {} \; -o -user $(whoami) -type d -exec chmod g+rx {} \;
    echo ".ssh folder cannot be group readable"
    chmod -R g-rw ~/.ssh
    echo "DONE!"
}

function transfer-file-ownership {
    echo "Fixing permissions...."
    find /home/mccuem/ ! -readable -prune -o -user $(whoami) -type f -exec chmod g+rw {} \; -o -user $(whoami) -type d -exec chmod g+rwx {} \;
    echo ".ssh folder cannot be group readable"
    chmod -R g-rw ~/.ssh
    echo "DONE!"
}

function add-my-email() {
    USER_EMAIL="$(grep $USER $EMAIL_LIST_PATH)"

    if [[ -z $USER_EMAIL ]]
    then
        echo -n "Please supply your email address: "
        read USER_EMAIL
        echo "$USER $USER_EMAIL" >> "$EMAIL_LIST_PATH"
    else
        echo "Your email is already recorded."
    fi
}

function get-email-of() {
    if [[ $(grep $USER ${SHARED_BASE}/emails.txt | wc -l) == 0 ]]
    then
        add-my-email;
    fi
    WHICH_USER=$USER
    if [[ $# == 1 ]]
    then
        WHICH_USER=$1
    fi
    USER_LINE="$(grep $WHICH_USER $EMAIL_LIST_PATH)"
    cut -d ' ' -f 2 <<< "$USER_LINE"
}

function freeze {
    EMAIL=$(get-email-of)

    if [[ $(hostname) != lab* ]]; 
    then 
        echo "log into lab.msi.umn.edu to use the freeze command"
        return 1
    fi

    if [[ $# -ne 1 ]]
    then
        echo "Syntax Error!"
        echo "------------------------------------------------------------"
        echo "Usage:"
        echo "% freeze DIRECTORY_NAME"
        echo ""
        echo "This command will submit a PBS job to the lab queue."
        echo "The job will archive, compress and upload the contents of"
        echo "DIRECTORY_NAME to secondary storage. The standard output and"
        echo "error files will be generated and you will recieve emails"
        echo "from the PBS system as normal."

        return 1
    fi

    qsub -F "$1" -M "$EMAIL" -q lab "$(which freeze.sh)" && echo "Job submitted."
}

cat << EOF >&2

-------------------------------------------------
------- Currently using McCue Lab Profile -------
-------------------------------------------------
        For complete documentation, visit:
     http://github.com/UMNPonyClub/MSI-Setup
EOF

export LAB_PROFILE=mccuem
